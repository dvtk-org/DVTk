using System;
using System.Collections.Generic;
using System.Text;
using System.Xml.XPath;

namespace Dvtk.Dicom.AttributeLayer.Specification
{
    /// <summary>
    ///  A Sequence Item specification from the DICOM standard.
    /// </summary>
    public class SequenceItem : AttributesAndMacros
    {

        #region - Fields -
        // -----------------------
        // - Begin fields region -
        // -----------------------

        /// <summary>
        /// See associated property.
        /// </summary>
        private SequenceAttribute parent = null;

        // ---------------------
        // - End fields region -
        // ---------------------
        #endregion



        #region - Constructors -
        // -----------------------------
        // - Begin constructors region -
        // -----------------------------

        /// <summary>
        /// Hide default constructor.
        /// </summary>
        private SequenceItem()
        {
            // Do nothing.
        }

        /// <summary>
        /// Constructor.
        /// </summary>
        /// <param name="parent">The parent of this instance.</param>
        public SequenceItem(SequenceAttribute parent)
        {
            this.parent = parent;
        }

        // ---------------------------
        // - End constructors region -
        // ---------------------------
        #endregion



        #region - Public properties -
        // ----------------------------------
        // - Begin public properties region -
        // ----------------------------------

        /// <summary>
        /// Gets the parent.
        /// </summary>
        public SequenceAttribute Parent
        {
            get
            {
                return (this.parent);
            }
        }

        // --------------------------------
        // - End public properties region -
        // --------------------------------
        #endregion



        #region - Internal methods -
        // --------------------------------
        // - Begin internal methods region -
        // --------------------------------

        /// <summary>
        /// Create a string representation of the path of this instance.
        /// </summary>
        /// <param name="prefix">The prefix to use of identation.</param>
        /// <returns>The string representation.</returns>
        internal override string ToString2(string prefix)
        {
            return (this.parent.ToString2(prefix) + "\n" + prefix + "SEQUENCE ITEM");
        }

        /// <summary>
        /// Create a string representation of the path of this instance.
        /// </summary>
        /// <returns>The string representation.</returns>
        internal override string ToString3()
        {
            return (this.parent.ToString3() + "/SEQUENCE ITEM");
        }

        // ------------------------------
        // - End internal methods region -
        // ------------------------------
        #endregion



        #region - Public methods -
        // -------------------------------
        // - Begin public methods region -
        // -------------------------------

        /// <summary>
        /// Accept method in the context of the "Hierarchical Visitor Pattern".
        /// See "DVTk_Library\Documentation\Design\Hierarchical Visitor Pattern.htm".
        /// </summary>
        /// <param name="sopClassVisitor">The SOP Class visitor.</param>
        /// <returns>
        /// true: continue traversing the siblings if this instance.
        /// false: stop traversing the siblings if this instance.
        /// </returns>
        public void Accept(SopClassVisitor1 sopClassVisitor)
        {
            sopClassVisitor.VisitEnterSequenceItem(this);

            foreach (IAttributeOrMacro attributeOrMacro in this)
            {
                attributeOrMacro.Accept(sopClassVisitor);
            }

            sopClassVisitor.VisitLeaveSequenceItem(this);
        }

        /// <summary>
        /// Create a Sequence Item instance using a raw xml file (that is generated by the ODD).
        /// </summary>
        /// <param name="sequenceItemNode">The Seuqnece Item node.</param>
        /// <param name="parent">The parent the the instance to create.</param>
        /// <returns>The created SequenceItem instance.</returns>
        public static SequenceItem Create(XPathNavigator sequenceItemNode, SequenceAttribute parent)
        {
            //
            // Construct SequenceItem instance.
            //

            SequenceItem sequenceItem = new SequenceItem(parent);


            //
            // Add attribute instances and Macros instances to created SequenceItem instance.
            //

            sequenceItem.AddAttributesAndMacros(sequenceItemNode);


            //
            // Return created instance.
            //

            return (sequenceItem);
        }

        // -----------------------------
        // - End public methods region -
        // -----------------------------
        #endregion
    }
}
