// ------------------------------------------------------
// DVTk - The Healthcare Validation Toolkit (www.dvtk.org)
// Copyright © 2009 DVTk
// ------------------------------------------------------
// This file is part of DVTk.
//
// DVTk is free software; you can redistribute it and/or modify it under the terms of the GNU
// Lesser General Public License as published by the Free Software Foundation; either version 3.0
// of the License, or (at your option) any later version. 
// 
// DVTk is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even
// the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
// General Public License for more details. 
// 
// You should have received a copy of the GNU Lesser General Public License along with this
// library; if not, see <http://www.gnu.org/licenses/>



using System;
using System.Drawing;
using System.Collections;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Windows.Forms;



namespace DvtkApplicationLayer.UserInterfaces
{
    /// <summary>
    /// Banner is a Form which contains entries (like e.g. TextBox) that are added by using method calls
    /// of this class. The appearance of this Form is then determined dynamically.
    /// </summary>
    public class Banner : System.Windows.Forms.Form
    {

        //
        // - Generated by Visual Studio -
        //

        /// <summary>
        /// Required designer variable.
        /// </summary>
        private System.ComponentModel.Container components = null;

        #region Windows Form Designer generated code
        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            // 
            // Banner
            // 
            this.AutoScaleMode = AutoScaleMode.None;
            this.AutoScaleBaseSize = new System.Drawing.Size(6, 15);
            this.ClientSize = new System.Drawing.Size(936, 648);
            this.KeyPreview = true;
            this.Name = "Banner";
            this.SizeGripStyle = System.Windows.Forms.SizeGripStyle.Hide;
            this.Text = "Banner";
            this.KeyDown += new System.Windows.Forms.KeyEventHandler(this.Banner_KeyDown);
            this.Load += new System.EventHandler(this.Banner_Load);
            this.VisibleChanged += new System.EventHandler(this.Banner_VisibleChanged);

        }
        #endregion



        //
        // - Fields -
        //
        //		private int leftMargin = 16;
        //		private int rightMargin = 16;
        //		private int topMargin = 16;
        //		private int bottomMargin = 16;
        //		private int verticalSpaceBetweenControls = 8;
        //		private int horizontalSpaceBetweenControls = 16;
        //		private int verticalSizeEntryControls = 23;
        private ArrayList entries = new ArrayList();
        //		private int EntryDescriptionWidth = 150;
        //		private int EntryValueWidth = 450;
        //		private String description = "";
        //		private int descriptionWidth = 616;
        private String caption = "";
        private ArrayList images = new ArrayList();
        private StringCollection textOnButtons = new StringCollection();
        private ArrayList buttonControls = null;
        private String textOnButtonPressed = "";

        //
        // - Constructors -
        //
        /// <summary>
        /// Default constructor.
        /// </summary>
        public Banner()
        {
            //
            // Required for Windows Form Designer support
            //
            InitializeComponent();

            this.textOnButtons.Add("OK");
        }

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                if (components != null)
                {
                    components.Dispose();
                }
            }
            base.Dispose(disposing);
        }

        //
        // - Properties -
        //

        /// <summary>
        /// Set the caption of the form.
        /// </summary>
        public String Caption
        {
            set
            {
                this.caption = value;
            }
        }

        //
        // - Methods -
        //

        /// <summary>
        /// Add an image to the form.
        /// 
        /// FOR NOW: only one image maximum will be displayed.
        /// </summary>
        /// <param name="image"></param>
        public void AddImage(Image image)
        {
            this.images.Add(image);
        }

        /// <summary>
        /// Called when the OK button is pressed.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The event arguments.</param>
        private void buttonOK_Click(object sender, System.EventArgs e)
        {
            this.textOnButtonPressed = (sender as Control).Name;

            Close();
        }

        /// <summary>
        /// Makes that that when the return is pressed, the form is closed.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The event arguments.</param>
        private void Banner_KeyDown(object sender, System.Windows.Forms.KeyEventArgs e)
        {
            if ((e.KeyCode == Keys.Enter) || (e.KeyCode == Keys.Return))
            {
                (this.buttonControls[0] as Button).PerformClick();
            }
        }

        /// <summary>
        /// Put the controls on the Form.
        /// </summary>
        /// <param name="sender">The sender.</param>
        /// <param name="e">The event arguments.</param>
        private void Banner_Load(object sender, System.EventArgs e)
        {
            //			int nextYPosition = this.topMargin;
            //			int newClientWidth = this.leftMargin + this.EntryDescriptionWidth + this.horizontalSpaceBetweenControls + this.EntryValueWidth + this.rightMargin;

            Text = this.caption;

            // Add the image if it is added.
            // ONLY SUPPORT ONE IMAGE FOR NOW.
            if (this.images.Count > 0)
            {
                //				nextYPosition+= this.verticalSpaceBetweenControls;
                Image image = this.images[0] as Image;

                PictureBox pictureBox = new PictureBox();
                pictureBox.Location = new Point(10, 10);
                pictureBox.Size = new Size(800, 1000);
                pictureBox.SizeMode = PictureBoxSizeMode.AutoSize;
                pictureBox.Image = image;
                pictureBox.BorderStyle = BorderStyle.FixedSingle; //.Fixed3D;
                Controls.Add(pictureBox);

                ClientSize = pictureBox.Size;
                this.MinimumSize = new Size(pictureBox.Size.Width + 30, pictureBox.Size.Height + 50);
                this.MaximumSize = new Size(pictureBox.Size.Width + 30, pictureBox.Size.Height + 50);

                //				nextYPosition+= pictureBox.Size.Height + (this.verticalSpaceBetweenControls * 2);
            }

            // Adjust the minimum and maximum size of the form.
            //			int newClientHeight = nextYPosition + 22 + this.bottomMargin;

        }

        private void Banner_VisibleChanged(object sender, System.EventArgs e)
        {
            if (Visible)
            {

            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="buttons"></param>
        public void SetButtons(params String[] buttons)
        {
            if (buttons.Length > 0)
            {
                this.textOnButtons = new StringCollection();
                this.textOnButtons.AddRange(buttons);
            }
        }

        /// <summary>
        /// 
        /// </summary>
        /// <returns></returns>
        public new String ShowDialog()
        {
            base.ShowDialog();

            return (this.textOnButtonPressed);
        }
    }
}
